<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
    <title>BH3GEI's Blog</title>
    <description>BH3GEI's personal blog about programming, technology and more</description>
    <link>https://bh3gei.github.io/blog</link>
    <atom:link href="https://bh3gei.github.io/blog/rss.xml" rel="self" type="application/rss+xml" />
    <language>zh-CN</language>
    <lastBuildDate>Fri, 07 Mar 2025 13:55:00 GMT</lastBuildDate>
    <item>
        <title>Fragments of thought</title>
        <link>https://bh3gei.github.io/blog/20250226_213501</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250226_213501</guid>
        <pubDate>Wed, 26 Feb 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[```cpp   // 获取喝了某瓶酒的仆人列表 std::vector<int> getServantsForBottle(int k, int numServants) {     std::vector<int> servants;     for (int i = 1; i <= numServants; i++) {         if (k & (1 << (i - 1))) {  // 检查第 (i-1) 位是否为 1             servants.push_back(i);         }     }     return servants; }  // 根据死亡的仆人列表识别毒酒瓶编号 int findPoisonedBottle(const std::vector<int>& diedServants, int numServants) {     int bottle = 0;     for (int servant : diedServants) {         if (servant >= 1 && servant <= numServ...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>LeetCode Daily Question</title>
        <link>https://bh3gei.github.io/blog/20250217_233258</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250217_233258</guid>
        <pubDate>Mon, 17 Feb 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[### 1718. Construct the Lexicographically Largest Valid Sequence ```cpp class Solution { private:     vector<int> res;     vector<int> used;     int m;          bool dfs(int pos) {         if (pos == res.size()) return true;         if (res[pos] != 0) return dfs(pos + 1);                  for (int i = m; i >= 1; --i) {             if (i == 1) {                 if (used[i] == 0) {                     res[pos] = 1;                     used[i] = 1;                     if (dfs(pos + 1)) return true;...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>LeetCode Top Interview 150</title>
        <link>https://bh3gei.github.io/blog/20250217_233514</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250217_233514</guid>
        <pubDate>Mon, 17 Feb 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[### 88. Merge Sorted Array ```python class Solution:     def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:         """         Do not return anything, modify nums1 in-place instead.         """         # 两个数列各一指针         i = m - 1         j = n - 1         # 用于写入的辅助指针         k = m + n - 1          while i >= 0 and j >= 0:             if nums1[i] > nums2[j]:                 nums1[k] = nums1[i]                 i -= 1             else:                 nums1[k] = nums2[j]...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>LeetCode From Zero</title>
        <link>https://bh3gei.github.io/blog/20250217_014831</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250217_014831</guid>
        <pubDate>Sun, 16 Feb 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[### 1. Two Sum ```cpp #include <vector>  class Solution { public:     /**      * @brief 找到数组中两个数的索引，使它们的和等于目标值（暴力解法）。      *       * @param nums 输入的整数数组      * @param target 目标和      * @return vector<int> 返回两个数的索引      */     std::vector<int> twoSum(std::vector<int>& nums, int target) {         // 双重循环遍历所有可能的数字对         for (int i = 0; i < nums.size(); ++i) {             for (int j = i + 1; j < nums.size(); ++j) { // 注意：j 从 i+1 开始，避免重复使用同一个元素                 if (nums[i] + nums[j] == target) {   ...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>My 2024 Summary</title>
        <link>https://bh3gei.github.io/blog/20250110_134027</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250110_134027</guid>
        <pubDate>Fri, 10 Jan 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[没写，不想写，别看了 等过些天忙起来了摸鱼才会写 ...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>Basic Node Package Manager Commands</title>
        <link>https://bh3gei.github.io/blog/20250108-11</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/20250108-11</guid>
        <pubDate>Wed, 08 Jan 2025 00:00:00 GMT</pubDate>
        <description><![CDATA[### 1. 基础命令  ```bash # 初始化项目,创建 package.json npm init  # 快速初始化(使用默认配置) npm init -y  # 安装依赖 npm install   # 简写: npm i npm install package-name  # 安装指定包 npm install package-name@1.0.0  # 安装特定版本  # 卸载依赖 npm uninstall package-name  # 简写: npm un  # 更新依赖 npm update  # 更新所有包 npm update package-name  # 更新指定包 ```  ### 2. 依赖类型  ```bash # 安装生产环境依赖 npm install package-name --save  # 简写: -S # 安装开发环境依赖 npm install package-name --save-dev  # 简写: -D # 全局安装 npm install package-name -g ```  ### 3. 运行脚本  ```bash #...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>Setting Up Ubuntu Container with GUI Support</title>
        <link>https://bh3gei.github.io/blog/podman</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/podman</guid>
        <pubDate>Wed, 25 Dec 2024 00:00:00 GMT</pubDate>
        <description><![CDATA[Setting Up Ubuntu Container with GUI Support  On host: ``` # Create a directory for persistent storage mkdir -p $HOME/ubuntu-data  # Run Ubuntu container with GUI support podman run -it --privileged \   --name my-ubuntu \   -e DISPLAY=$DISPLAY \   -v /tmp/.X11-unix:/tmp/.X11-unix \   -v $HOME/.Xauthority:/root/.Xauthority \   -v $HOME/ubuntu-data:/root \   ubuntu:latest  # Allow container to access X server xhost +local: ```  ``` echo "alias ubuntu='podman exec -it my-ubuntu bash'" >> ~/.bashrc ...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>Set Up V2ray server</title>
        <link>https://bh3gei.github.io/blog/setupV2</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/setupV2</guid>
        <pubDate>Fri, 06 Dec 2024 00:00:00 GMT</pubDate>
        <description><![CDATA[# Set Up V2Ray Server with VMess Protocol  ## Introduction In this tutorial, I'll guide you through setting up a V2Ray server using the VMess protocol with HTTP camouflage. This setup is particularly useful for users who need a reliable and secure proxy solution.  ## Prerequisites - A Linux server (Ubuntu/Debian recommended) - Root access to the server - Basic command line knowledge  ## Step 1: Installing V2Ray First, we need to install V2Ray on your server. The installation process has been upd...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>Kaggle Learning Notes</title>
        <link>https://bh3gei.github.io/blog/KaggleLearning</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/KaggleLearning</guid>
        <pubDate>Wed, 10 Jul 2024 00:00:00 GMT</pubDate>
        <description><![CDATA[# KaggleLearning Personal Notes  ## LMSYS - Chatbot Arena Human Preference Predictions Predict which response users are more likely to prefer in head-to-head matchups between chatbots powered by large language models (LLMs), ensuring that LLM-generated responses align with user preferences.  ### https://www.kaggle.com/code/awsaf49/lmsys-kerasnlp-starter  A very basic and detailed explanation, which I followed step by step.  1. **Environment Setup** (Installing necessary libraries, selecting JAX ...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
    <item>
        <title>WebAssembly Learning Notes</title>
        <link>https://bh3gei.github.io/blog/wasm</link>
        <guid isPermaLink="true">https://bh3gei.github.io/blog/wasm</guid>
        <pubDate>Wed, 10 Jul 2024 00:00:00 GMT</pubDate>
        <description><![CDATA[# WebAssembly Learning Notes  This is an archive of my learning journey that started a month ago. Due to the intensive learning pace, I needed to organize my thoughts.  [Chinese version follows below]  ## A Brief Introduction  WebAssembly is designed to complement JavaScript for compute-intensive tasks rather than replace it. It's a new open standard binary format that can run anywhere once compiled.  ![image](https://github.com/BH3GEI/WebAssemblyLearning/assets/58540850/c70b0e61-97d1-4a16-94ba-...]]></description>
        <author>BH3GEI</author>
        <category>Programming</category>
    </item>
</channel>
</rss>