<div style="display:none;">
>   **2020 JLU_CTF部分赛题解题思路(无营养)**

>   由于本人比较菜，只写了这么几道题，求大佬轻喷。
>   bilibili网安做了六道题也懒得写了
>   排版也懒得弄了

1.  something so fast

    ![](media/190070434313722b452a18d4c55cf0f0.png)

    思路：解压文件后得到一个.gif文件，每一帧都是一个二维码。利用
    https://zh.bloggif.com/gif-extract?id=a2baa5235403e274622ce0848197e96f
    提供的在线逐帧分解.gif文件服务，得到九张二维码图片，每张扫描后得到flag的一部分。顺序连接得到flag为：

    Spirit{8c5c6150-c6bf-4473-ad6a-380016e29ced}

2.  YLBNB

    ![](media/1613a1b9d1748120c461305ed54ac549.png)

    思路：解压后得到.png图片文件，使用Windows PowerShell的Format-Hex
    ./great_captcha.png命令得到图片文件的十六进制。

    肉眼观察（在任一文本编辑器ctrl+f查找）后可以发现flag在第105行，上下文为：

3.  00000650 70 68 6F 74 6F 73 68 6F 70 3A 4C 61 79 65 72 54 photoshop:LayerT

4.  00000660 65 78 74 3D 22 53 70 69 72 69 74 7B 69 5F 31 5F ext="Spirit{i_1\_

5.  00000670 6C 5F 4C 5F 49 5F 6F 5F 4F 5F 30 5F 43 5F 63 5F l_L_I_o_O_0_C_c\_

6.  00000680 57 5F 77 7D 22 2F 3E 20 3C 2F 72 64 66 3A 42 61 W_w}"/\> \</rdf:Ba

7.  00000690 67 3E 20 3C 2F 70 68 6F 74 6F 73 68 6F 70 3A 54 g\> \</photoshop:T

8.  000006A0 65 78 74 4C 61 79 65 72 73 3E 20 3C 2F 72 64 66 extLayers\> \</rdf

9.  000006B0 3A 44 65 73 63 72 69 70 74 69 6F 6E 3E 20 3C 2F :Description\> \</

10. 000006C0 72 64 66 3A 52 44 46 3E 20 3C 2F 78 3A 78 6D 70 rdf:RDF\> \</x:xmp

    故flag为：

    Spirit{i_1_l_L_I_o_O_0_C_c_W_w}

11. 锟斤拷

    ![](media/6a25f0048cff21fdcce3d0a5d3e5e03e.png)

    思路：在dev
    c++内以GBK格式保存字符串”锛筹綈锝夛綊锝夛綌锝涳及锛瑉锛嶏綍锝擄絽锛嶏綍锝旓絾锛嶏紭锛嶏綈锝曪綊锝咃綄锝欙綕”到一个文本文档,
    再用vscode以uft-8模式打开此文本文档，即可得到”
    Ｓｐｉｒｉｔ{ＰＬz－ｕｓｅ－ｕｔｆ－８－ｐｕｒｅｌｙ}”，根据题意得到flag为：

    Spirit{ＰＬz－ｕｓｅ－ｕｔｆ－８－ｐｕｒｅｌｙ}

12. 大佬的学习计划表

    ![](media/76585db283d2b04719346f6af7fc8258.png)

    ![](media/901ae793a7c68f412089edf90df6c976.png)

    ![](media/f6213656e0595d7db1ca40092f8352b0.png)

    ![](media/5be89029a2adb66f6bbebeb30744390b.png)

    把每一个日期都画在日历上可以得到如下图样：

    ![](media/b8bb2389e6c2781beda4155080e66494.png)

    [(圈是误画，)其中第五位字符处产生了两个字母”I”
    ”E”与数字”6”之间的歧义(将“i”拼到”E”的右边就是”6”),多次实验得到其表意为”6”]

    最终得到全部字符为” 5471609XNFHZ”, 故flag为：

    Spirit{5471609XNFHZ}

13. 双重保险

    ![](media/1f29474d4ce02f563289e4e7adef3254.png)

    材料下载：https://misakanetwork.lanzous.com/irxJRhdf3ve

    利用网址 https://www.toolnb.com/tools/pyc.html
    提供的服务对题目提供的压缩包内部的double_check.pyc进行反编译得到如下代码：

14. **def** xor(a, b):

15. **return** bytes([x[0] \^ x[1] **for** x **in** zip(a, b)])

16. **def** load_asset():

17. **return** open('data', 'rb').read()

18. **def** check(data, key1, key2):

19. key1 = int(key1)

20. cipher = data[key1:key1 + 26]

21. **return** xor(key2.encode(), cipher) == 'Kvbm4aeoZzR5upGgKjqPE39ovM'

22. **if** \__name_\_ == '__main__':

23. data = load_asset()

24. key1 = input('Plz input password 1:')

25. key2 = input('Plz input password 2:')

26. **try**:

27. result = check(data, key1, key2)

28. **except** Exception as e:

29. **try**:

30. result = False

31. **finally**:

32. e = None

33. **del** e

34. **if** result:

35. **print**('Correct!')

36. **else**:

37. **print**('Nope. Try again!')

    解析后， 利用如下代码试出flag：

38. **def** xor(a, b):

39. **return** bytes([x[0] \^ x[1] **for** x **in** zip(a, b)])

40. **def** load_asset():

41. **return** open('data', 'rb').read()

42. **def** check(data, key1, key2):

43. key1 = int(key1)

44. cipher = data[key1:key1 + 7] \#"Spirit{"共7个字符

45. **return** xor(key2.encode(), cipher) == 'Kvbm4ae'

46. \#返回值应为"Spirit{"加密的结果

47. data = load_asset()

48. total = 'Kvbm4aeoZzR5upGgKjqPE39ovM'

49. crack = data[374543:374569]
    \#根据前七位定位到data二进制文件的374543位处flag开始，直到374569位，此区间内与flag相同，共27个字符。

50. k = 0

51. **for** j **in** total:

52. **for** i **in** range(0, 127):

53. **if** xor(i,crack[k]) == (total[k].encode()):

54. **print**(chr(i))

55. k+=1

56. **break**

57. \#比对读取的二进制文件和尝试字符值i的值，穷举后满足条件输出该位字符。试验出flag內所有字符后跳出循环

    可得输出结果为：

    Spirit{prune_1s_1mp0rtant}

58. Shell

    ![](media/bc922550b04b1f3cb96a82f19e4ad4de.png)

    在安装了netcat的linux环境下输入nc 59.72.109.16
    30001命令，enter之后继续输入ls -l, 得到当前目录下的所有文件列表：

    ![](media/1b3e8ff715312ea0927b4d29158bbbd6.png)

    继续使用cat命令得到flag：

    ![](media/1b3e8ff715312ea0927b4d29158bbbd6.png)

59. 签到题：

    凯撒密码：Mjclcn{mcah_ch_qcnb_wuymul?}

    凯撒密码，一种简单的替换密码。使用Android app “Caesar cipher”
    或其他web解密服务可直接得到25（因为只有26个英文字母，故只有25个方案）个不同的结果：

    ![](media/7ac61b35df346648cb080219198deb50.png)

    根据字符串片段”Spirit”可知flag为：

    Spirit{sign_in_with_caesar?}

60. 小猪佩奇

    ![](media/b1a1bfda770826502d3fe42d233f44eb.png)

    根据猪圈密码：

    ![豬圈密碼- 维基百科，自由的百科全书](media/d31f97fd8bb43bacca465ef4d02440f6.png)

    并把flag图样中的点状图换为与点数相等的数字，可得flag为：

    Spirit{FFF9A7C5577A}
</div>
